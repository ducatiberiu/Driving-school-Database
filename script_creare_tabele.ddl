-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-12-20 14:00:58 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE autoturisme (
    id_autoturism  NUMBER(4) NOT NULL,
    marca          VARCHAR2(20) NOT NULL,
    tip_transmisie VARCHAR2(8) NOT NULL,
    an_fabricatie  NUMBER(4) NOT NULL,
    id_instructor  NUMBER(2) NOT NULL
);

ALTER TABLE autoturisme
    ADD CONSTRAINT autoturisme_marca_ck CHECK ( REGEXP_LIKE ( marca,
                                                              '^[A-Za-z]+$' ) );

ALTER TABLE autoturisme
    ADD CONSTRAINT autoturisme_tip_transmisie_ck CHECK ( tip_transmisie IN ( 'automata', 'manuala' ) );

CREATE UNIQUE INDEX autoturisme__idx ON
    autoturisme (
        id_instructor
    ASC );

ALTER TABLE autoturisme ADD CONSTRAINT autoturisme_id_autoturism_pk PRIMARY KEY ( id_autoturism );

CREATE TABLE contracte (
    id_contract     NUMBER(4) NOT NULL,
    data_semnarii   DATE NOT NULL,
    data_incheierii DATE NOT NULL,
    pret            NUMBER(4) NOT NULL,
    id_cursant      NUMBER(3) NOT NULL
);

CREATE UNIQUE INDEX contracte__idx ON
    contracte (
        id_cursant
    ASC );

ALTER TABLE contracte ADD CONSTRAINT contracte_id_contract_pk PRIMARY KEY ( id_contract );

CREATE TABLE cursanti (
    id_cursant   NUMBER(3) NOT NULL,
    nume         VARCHAR2(20) NOT NULL,
    prenume      VARCHAR2(25) NOT NULL,
    data_nastere DATE NOT NULL,
    nr_telefon   VARCHAR2(10) NOT NULL
);

ALTER TABLE cursanti
    ADD CONSTRAINT cursanti_nume_ck CHECK ( REGEXP_LIKE ( nume,
                                                          '^[A-Za-z]+$' ) );

ALTER TABLE cursanti
    ADD CONSTRAINT cursanti_prenume_ck CHECK ( REGEXP_LIKE ( prenume,
                                                             '^[A-Za-z]+$' ) );

ALTER TABLE cursanti
    ADD CONSTRAINT cursanti_nr_telefon_ck CHECK ( REGEXP_LIKE ( nr_telefon,
                                                                '^(02|07)[0-9]{8}$' ) );

ALTER TABLE cursanti ADD CONSTRAINT cursanti_id_cursant_pk PRIMARY KEY ( id_cursant );

ALTER TABLE cursanti ADD CONSTRAINT cursanti_nr_telefon_uk UNIQUE ( nr_telefon );

CREATE TABLE detalii_cursanti (
    nr_ore_efectuate      NUMBER(2) NOT NULL,
    tip_examen_promovat   VARCHAR2(20),
    valabilitate_contract NUMBER(2) NOT NULL,
    id_cursant            NUMBER(3) NOT NULL
);

ALTER TABLE detalii_cursanti
    ADD CONSTRAINT det_cursanti_tip_ex_prom_ck CHECK ( tip_examen_promovat IN ( 'practic', 'teoretic' ) );

ALTER TABLE detalii_cursanti
    ADD CONSTRAINT det_cursanti_val_contract_ck CHECK ( valabilitate_contract BETWEEN 0 AND 12 );

CREATE UNIQUE INDEX detalii_cursanti__idx ON
    detalii_cursanti (
        id_cursant
    ASC );

CREATE TABLE instructori (
    id_instructor           NUMBER(2) NOT NULL,
    nume                    VARCHAR2(20) NOT NULL,
    prenume                 VARCHAR2(25) NOT NULL,
    data_eliberarii_atestat DATE NOT NULL,
    nr_telefon              VARCHAR2(10) NOT NULL
);

ALTER TABLE instructori
    ADD CONSTRAINT instructori_nume_ck CHECK ( REGEXP_LIKE ( nume,
                                                             '^[A-Za-z]+$' ) );

ALTER TABLE instructori
    ADD CONSTRAINT instructori_prenume_ck CHECK ( REGEXP_LIKE ( prenume,
                                                                '^[A-Za-z]+$' ) );

ALTER TABLE instructori
    ADD CONSTRAINT instructori_nr_telefon_ck CHECK ( REGEXP_LIKE ( nr_telefon,
                                                                   '^(02|07)[0-9]{8}$' ) );

ALTER TABLE instructori ADD CONSTRAINT instructor_id_instructor_pk PRIMARY KEY ( id_instructor );

ALTER TABLE instructori ADD CONSTRAINT instructori_nr_telefon_uk UNIQUE ( nr_telefon );

CREATE TABLE programari_examene (
    id_programare NUMBER(4) NOT NULL,
    tip_examen    VARCHAR2(20) NOT NULL,
    data          DATE NOT NULL,
    locatie       VARCHAR2(50) NOT NULL,
    id_cursant    NUMBER(3) NOT NULL,
    id_instructor NUMBER(2) NOT NULL
);

ALTER TABLE programari_examene
    ADD CONSTRAINT prog_examene_tip_examen_ck CHECK ( tip_examen IN ( 'practic', 'teoretic' ) );

ALTER TABLE programari_examene ADD CONSTRAINT programari_examene_id_prog_pk PRIMARY KEY ( id_programare );

ALTER TABLE contracte
    ADD CONSTRAINT cursanti_contracte_fk FOREIGN KEY ( id_cursant )
        REFERENCES cursanti ( id_cursant );

ALTER TABLE detalii_cursanti
    ADD CONSTRAINT cursanti_detalii_cursanti_fk FOREIGN KEY ( id_cursant )
        REFERENCES cursanti ( id_cursant );

ALTER TABLE programari_examene
    ADD CONSTRAINT cursanti_programari_examene_fk FOREIGN KEY ( id_cursant )
        REFERENCES cursanti ( id_cursant );

ALTER TABLE autoturisme
    ADD CONSTRAINT instructori_autoturisme_fk FOREIGN KEY ( id_instructor )
        REFERENCES instructori ( id_instructor );

ALTER TABLE programari_examene
    ADD CONSTRAINT instructori_prog_examene_fk FOREIGN KEY ( id_instructor )
        REFERENCES instructori ( id_instructor );

CREATE SEQUENCE autoturisme_id_autoturism_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER autoturisme_id_autoturism_trg BEFORE
    INSERT ON autoturisme
    FOR EACH ROW
    WHEN ( new.id_autoturism IS NULL )
BEGIN
    :new.id_autoturism := autoturisme_id_autoturism_seq.nextval;
END;
/

CREATE SEQUENCE contracte_id_contract_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER contracte_id_contract_trg BEFORE
    INSERT ON contracte
    FOR EACH ROW
    WHEN ( new.id_contract IS NULL )
BEGIN
    :new.id_contract := contracte_id_contract_seq.nextval;
END;
/

CREATE SEQUENCE cursanti_id_cursant_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cursanti_id_cursant_trg BEFORE
    INSERT ON cursanti
    FOR EACH ROW
    WHEN ( new.id_cursant IS NULL )
BEGIN
    :new.id_cursant := cursanti_id_cursant_seq.nextval;
END;
/

CREATE SEQUENCE instructori_id_instructor_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER instructori_id_instructor_trg BEFORE
    INSERT ON instructori
    FOR EACH ROW
    WHEN ( new.id_instructor IS NULL )
BEGIN
    :new.id_instructor := instructori_id_instructor_seq.nextval;
END;
/

CREATE SEQUENCE programari_examene_id_programa START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER programari_examene_id_programa BEFORE
    INSERT ON programari_examene
    FOR EACH ROW
    WHEN ( new.id_programare IS NULL )
BEGIN
    :new.id_programare := programari_examene_id_programa.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             6
-- CREATE INDEX                             3
-- ALTER TABLE                             23
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           5
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          5
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
